from LoRaRF import SX126x
import time

def test_lora_connection():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ LoRa ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢"""
    
    print("üîß Testing LoRa Connection...")
    
    lora = SX126x()
    
    try:
        # ‡∏•‡∏≠‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠
        lora.begin()
        print("‚úÖ LoRa.begin() successful")
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        try:
            status = lora.getModemStatus()
            print(f"‚úÖ Modem Status: {status}")
        except:
            print("‚ö†Ô∏è Cannot read modem status")
        
        # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
        lora.setFrequency(865.0)
        lora.setSpreadingFactor(7)
        lora.setBandwidth(125000)
        print("‚úÖ Basic configuration set")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Connection failed: {e}")
        return False

def test_simple_send():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡πà‡∏≤‡∏¢‡πÜ"""
    
    if not test_lora_connection():
        return
    
    lora = SX126x()
    lora.begin()
    lora.setFrequency(865.0)
    lora.setSpreadingFactor(7)
    lora.setBandwidth(125000)
    
    message = "TEST123"
    print(f"üì§ Sending: {message}")
    
    try:
        lora.write(message.encode(), len(message))
        print("‚úÖ Send successful")
    except Exception as e:
        print(f"‚ùå Send failed: {e}")

def test_simple_receive():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏á‡πà‡∏≤‡∏¢‡πÜ"""
    
    if not test_lora_connection():
        return
    
    lora = SX126x()
    lora.begin()
    lora.setFrequency(865.0)
    lora.setSpreadingFactor(7)
    lora.setBandwidth(125000)
    
    print("üì° Listening for simple messages...")
    
    for i in range(30):  # ‡∏ü‡∏±‡∏á 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        try:
            if lora.available():
                data = lora.read()
                print(f"üì• Received: {data}")
                
                try:
                    message = data.decode('utf-8')
                    print(f"üî§ Decoded: {message}")
                except:
                    print(f"üìä Raw: {data.hex()}")
                    
            else:
                print(f"‚è≥ Waiting... ({i+1}/30)")
                
        except Exception as e:
            print(f"‚ö†Ô∏è Error: {e}")
            
        time.sleep(1)

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) < 2:
        print("Usage:")
        print("  python lora_test.py test    - Test connection")
        print("  python lora_test.py send    - Test sending")  
        print("  python lora_test.py receive - Test receiving")
    elif sys.argv[1] == "test":
        test_lora_connection()
    elif sys.argv[1] == "send":
        test_simple_send()
    elif sys.argv[1] == "receive":
        test_simple_receive()
    else:
        print("Invalid command")